<?xml version="1.0" encoding="UTF-8"?>

<mule
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:redis="http://www.mulesoft.org/schema/mule/redis"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/redis http://www.mulesoft.org/schema/mule/redis/current/mule-redis.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="impl-get-redis-brand-cache-flow"
		doc:id="7b6e8c05-697b-44e3-8661-c5735c1c5fa0">
		<logger level="INFO"
			doc:name="START - Redis Brand Cache Request"
			doc:id="76d223ea-7733-4475-b485-790480dcaf64"
			message="START - Redis Brand Cache Request" />
		<set-variable
			value="#['bridge-' ++ attributes.uriParams.prefix]"
			doc:name="redisKey" doc:id="2750813b-ee23-4d0a-9382-8cf641b7ff78"
			variableName="redisKey" />
		<flow-ref doc:name="get-redis-cache-subflow"
			doc:id="887d86b8-bf5b-47f3-9228-52a5578660f6"
			name="get-redis-cache-subflow" />
		<choice doc:name="CONTAINS brandID?"
			doc:id="c97238b6-1a84-4eaf-9006-79c093b85817">
			<when expression="#[!isEmpty(payload)]">
				<ee:transform doc:name="Redis Response to API Response"
					doc:id="6ac1b978-e34d-4518-b4ea-94315fa41eb7">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
var result = read(payload,'application/json')
---
{
  "x-event-id":	correlationId,	
  "x-event-code": 1005,
  "x-event-msg": "Success",
  "result": result
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise>
				<ee:transform
					doc:name="Redis Response to API Response (No Key Found)"
					doc:id="86240edc-45c5-4591-abf8-03312c1553de">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json

---
{
  "x-event-id":	correlationId,	
  "x-event-code": 1005,
  "x-event-msg": "Success",
  "result": payload default ""
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="END- Redis Brand Cache Request" doc:id="f3a62236-8888-425b-95b3-436f3f2451a7" message="END- Redis Brand Cache Request"/>
		<error-handler ref="sys-redis-api_Shared_Error_Handler" />


	</flow>

	<flow name="impl-get-redis-state-cache-flow" doc:id="c771bb79-036e-4ff9-93ad-f88df107be55" >
		<logger level="INFO" doc:name="START - Redis State Cache Request" doc:id="aa1ec2c8-8443-463a-92da-2ce5487ee638" message="START - Redis State Cache Request"/>
		<set-variable value="#['spectre-freefb-' ++ attributes.uriParams.msisdn]" doc:name="redisKey" doc:id="b257dc6e-c539-49a4-b97e-33b218920d23" variableName="redisKey" />
		<flow-ref doc:name="get-redis-cache-subflow" doc:id="002ecaf7-dd70-4ff0-985d-952c6f70a506" name="get-redis-cache-subflow" />
		<choice doc:name="CONTAINS State?" doc:id="1bd065ff-e20b-423c-aa25-4f89f62ec5a2" >
			<when expression="#[!isEmpty(payload)]" >
				<ee:transform doc:name="Redis Response to API Response" doc:id="d2f65950-976e-445e-899b-4a5dbe35867b" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var result = read(payload,'application/json')
---
{
  "x-event-id":	correlationId,	
  "x-event-code": 1005,
  "x-event-msg": "Success",
  "result": result
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Redis Response to API Response (No Key Found)" doc:id="0b7724f7-b2bc-4694-99b0-4668b5307abc" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json

---
{
  "x-event-id":	correlationId,	
  "x-event-code": 1005,
  "x-event-msg": "Success",
  "result": payload default ""
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="END- Redis State Cache Request" doc:id="3b0c7b86-a969-4a35-818c-a80b44b877ff" message="END- Redis State Cache Request"/>
	</flow>
	<flow name="impl-put-redis-state-cache-flow"
		doc:id="125d5e40-7662-4b46-97e8-dc2cf16635f1">
		<logger level="INFO" doc:name="START -Update Redis State Cache Request" doc:id="347a1df2-a889-4753-8415-a7af5d12c91c" message="START -Update Redis State Cache Request"/>
		<set-variable value="#['spectre-freefb-' ++ attributes.uriParams.msisdn]" doc:name="redisKey" doc:id="70bceaa7-740a-4806-afbd-ec93c2c312b9" variableName="redisKey" />
		<flow-ref doc:name="set-redis-cache-subflow"
			doc:id="9601088d-6370-455a-856a-2cf95519fcec"
			name="set-redis-cache-subflow" />
		<choice doc:name="IS successful?"
			doc:id="53d30754-567a-4e1f-9aa3-47cc701bef8b">
			<when expression="#[payload == 'OK']">
				<ee:transform
					doc:name="Redis Response to API Response(Success)"
					doc:id="5bee3877-036e-40a5-bf85-03922a24a29c">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
 "x-event-id":	correlationId,	
 "x-event-code": 1002,
 "x-event-msg": "State Updated Successfully!"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise>
				<ee:transform
					doc:name="Redis Response to API Response(Unsuccess)"
					doc:id="6cb4c85a-312e-453b-8cf8-133b39ba7381">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
 "x-event-id":	correlationId,	
 "x-event-code": 1002,
 "x-event-msg": "State Updated Unsuccessful!"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="END-Update Redis State Cache Request" doc:id="2db44ebe-c5af-4c60-acc1-ebe9111f335c" message="END-Update Redis State Cache Request"/>
		<error-handler ref="sys-redis-api_Shared_Error_Handler" />
	</flow>
	<flow name="impl-post-redis-brand-cache-flow" doc:id="2c087806-9fe8-4c6c-9b47-36afe9fa2861" >
		<logger level="INFO" doc:name="START -Add Redis Brand Cache Request" doc:id="bfc183fa-929d-4c0d-a92c-81dd9dfdef57" message="START -Add Redis Brand Cache Request"/>
		<set-variable value="#['bridge-' ++ payload.prefix]" doc:name="redisKey" doc:id="ed923ae0-095d-485f-856c-c0f34afdf725" variableName="redisKey" />
		<flow-ref doc:name="set-redis-cache-subflow" doc:id="449e25bf-fc29-4d47-825c-9c1ad09a986b" name="set-redis-cache-subflow" />
		<choice doc:name="IS successful?" doc:id="38b49ccc-aef4-4a23-9659-452cd2bf9b0c" >
			<when expression="#[payload == 'OK']" >
				<ee:transform doc:name="Redis Response to API Response(Success)" doc:id="72aaae5d-8309-4ab7-8e7c-46dd21f1c98f" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
 "x-event-id":	correlationId,	
 "x-event-code": 1002,
 "x-event-msg": "Cache Bridge Successful!"
 }
 ]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Redis Response to API Response(Unsuccess)" doc:id="80415d23-cf89-4454-9b22-24f7a8aed08d" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
 "x-event-id":	correlationId,	
 "x-event-code": 1002,
 "x-event-msg": "Cache Bridge Unsuccessful!"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="END -Add Redis Brand Cache Request" doc:id="16d8494b-a01c-4bde-85bf-a8d6a5795eb6" message="END -Add Redis Brand Cache Request"/>
	</flow>


</mule>
