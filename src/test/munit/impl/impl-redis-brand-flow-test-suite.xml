<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracing="http://www.mulesoft.org/schema/mule/tracing"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/tracing http://www.mulesoft.org/schema/mule/tracing/current/mule-tracing.xsd">
	<munit:config name="impl-get-redis-brand-flow-test-suite.xml" />
	<munit:test name="impl-get-redis-brand-flow-success-test" doc:id="a482a532-6685-42ea-bc1f-0b925dc5bcf5">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock get-redis-subflow" doc:id="1b6696b4-4193-4c9f-8fa8-8a8ecd42599e" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="887d86b8-bf5b-47f3-9228-52a5578660f6" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://implgetredisbrandflowsuccesstest\mock_payload.dwl')]" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://implgetredisbrandflowsuccesstest\mock_variable_.dwl')]" />
						<munit-tools:variable key="redisKey" value="#[output application/java --- readUrl('classpath://implgetredisbrandflowsuccesstest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<tracing:with-correlation-id doc:name="With CorrelationID" doc:id="b084052e-fdff-4a19-976a-8076f07e1731" correlationId='#["s12312312312312312"]'>
				<munit:set-event doc:name="Set Input" doc:id="9dadbb17-9c64-462a-ab8a-a75e2db3f887">
				<munit:payload value="#[readUrl('classpath://implgetredisbrandflowsuccesstest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://implgetredisbrandflowsuccesstest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://implgetredisbrandflowsuccesstest\set-event_variable_.dwl')]" />
					<munit:variable key="correlationId " value='"s12312312312312312"' />
				</munit:variables>
			</munit:set-event>
				<flow-ref doc:name="Flow-ref to impl-get-redis-brand-flow" doc:id="8cc1b2e2-b577-4cdb-b678-87142944ba44" name="impl-get-redis-brand-flow" />
			</tracing:with-correlation-id>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="c62010c7-fd83-40ab-8800-e28fe57b47b8" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import implgetredisbrandflowsuccesstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify END- Redis Brand Request" doc:id="fa4f42ad-9d01-4aca-b954-bacdac28a2be" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f3a62236-8888-425b-95b3-436f3f2451a7" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="impl-get-redis-brand-flow-no-key-found-test" doc:id="25b93ea3-5de6-42e6-8d77-7e0e0bd81d9c">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock get-redis-subflow" doc:id="aae34a17-d30d-44e9-b0c9-e9fe9801fe2a" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="887d86b8-bf5b-47f3-9228-52a5578660f6" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://implgetredisbrandflownokeyfoundtest\mock_payload.dwl')]" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://implgetredisbrandflownokeyfoundtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="redisKey" value="#[output application/java --- readUrl('classpath://implgetredisbrandflownokeyfoundtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<tracing:with-correlation-id doc:name="With CorrelationID" doc:id="2adadeca-e2a7-444b-9998-79199bc3233a" correlationId='#["s12312312312312312"]'>
				<munit:set-event doc:name="Set Input" doc:id="6234e3ba-4540-47d7-9ec9-2393d81759c1">
				<munit:payload value="#[readUrl('classpath://implgetredisbrandflownokeyfoundtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://implgetredisbrandflownokeyfoundtest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://implgetredisbrandflownokeyfoundtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
				<flow-ref doc:name="Flow-ref to impl-get-redis-brand-flow" doc:id="cb707fcd-bc11-4dd0-afca-c02e686f0805" name="impl-get-redis-brand-flow" />
			</tracing:with-correlation-id>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="d03fe0cf-9bf4-4686-94ae-dd4a2562bcb9" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import implgetredisbrandflownokeyfoundtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify END- Redis Brand Request" doc:id="c4003306-ca06-4e49-b071-0d1dce344470" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f3a62236-8888-425b-95b3-436f3f2451a7" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="impl-post-redis-brand-flow-success-test" doc:id="7e5a8b5a-d351-43f8-9e67-98156ff845ca">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock set-redis-subflow" doc:id="5947d888-86fa-477a-813a-c372bbc0c00a" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="449e25bf-fc29-4d47-825c-9c1ad09a986b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[output text/plain&#10;---&#10;"OK"]' mediaType="text/plain" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://implpostredisbrandflowsuccesstest\mock_variable_.dwl')]" />
						<munit-tools:variable key="redisKey" value="#[output application/json --- readUrl('classpath://implpostredisbrandflowsuccesstest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Input" doc:id="e01e58ab-2ff3-4b1b-b751-a90a96ff63bd">
				<munit:payload value="#[output application/json --- readUrl('classpath://implpostredisbrandflowsuccesstest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://implpostredisbrandflowsuccesstest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://implpostredisbrandflowsuccesstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
			<tracing:with-correlation-id doc:name="With CorrelationID" doc:id="c340e4e4-fc69-4524-a5be-b42507f39fc1" correlationId='#["s12312312312312312"]'>
				<flow-ref doc:name="Flow-ref to impl-post-redis-brand-flow" doc:id="f944994a-943a-4daf-9633-1b48e72f5eb7" name="impl-post-redis-brand-flow" />
			</tracing:with-correlation-id>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="6c3d90d9-c712-4bc4-94f4-72f1f9eabc08" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import implpostredisbrandflowsuccesstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify END -Add Redis Brand Cache Request" doc:id="3c569c77-8b40-4c8b-98a4-eb76400b6572" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="16d8494b-a01c-4bde-85bf-a8d6a5795eb6" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="impl-post-redis-brand-flow-unsuccessful-test" doc:id="af0e532e-8a79-4c0d-9142-2ceb6794df4b" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock set-redis-subflow" doc:id="ec921fd7-9348-42a6-a36f-9027769928e2" processor="flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="449e25bf-fc29-4d47-825c-9c1ad09a986b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[output text/plain&#10;---&#10;"NOT OK"]' mediaType="text/plain" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://implpostredisbrandflowunsuccessfultest\mock_variable_.dwl')]" />
						<munit-tools:variable key="redisKey" value="#[output application/json --- readUrl('classpath://implpostredisbrandflowunsuccessfultest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Input" doc:id="750a1411-9578-4a01-bcff-20c369646123">
				<munit:payload value="#[output application/json --- readUrl('classpath://implpostredisbrandflowunsuccessfultest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://implpostredisbrandflowsuccesstest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://implpostredisbrandflowsuccesstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
			<tracing:with-correlation-id doc:name="With CorrelationID" doc:id="3a32a22f-6af2-41b9-bd7e-c7b757e45bc2" correlationId='#["s12312312312312312"]' >
				<flow-ref doc:name="Flow-ref to impl-post-redis-brand-flow" doc:id="85556c04-4218-4987-85bb-d403d85aed82" name="impl-post-redis-brand-flow" />
			</tracing:with-correlation-id>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="7c9d27ac-354f-4e81-97a4-9b48d6652263" message="The payload does not match" >
				<munit-tools:that ><![CDATA[#[%dw 2.0
import implpostredisbrandflowunsuccessfultest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify END -Add Redis Brand Cache Request" doc:id="44cedef6-8cbc-43ef-a701-b2e3c8e0a2e6" processor="logger" times="1" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="16d8494b-a01c-4bde-85bf-a8d6a5795eb6" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
